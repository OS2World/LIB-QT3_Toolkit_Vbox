#############################################################################
# Makefile for building: designer
# Generated by qmake (1.07a) (Qt 3.3.1) on: Sun Nov  2 20:37:44 2014
# Project:  app.pro
# Template: app
# Command: $(QMAKE) -o C:\200\trunk\tools\designer\app\Makefile C:\200\trunk\tools\designer\app\app.pro
#############################################################################

QMAKESPECDIR	=	C:\200\trunk\mkspecs\os2-g++

####### Compiler, tools and options

CC		=	gcc
CXX		=	g++
LEX		= flex
YACC		= byacc
CFLAGS	=	-Zomf -Wall -Zmt -s -O2 -fno-exceptions  -DQT_NO_PRINTER -DQT_NO_IPV6 -DQT_DLL -DQT_THREAD_SUPPORT -DQT_NO_DEBUG -DQT_SHARED
CXXFLAGS	=	-Zomf -Wall -Zmt -s -O2 -fno-exceptions -fno-rtti  -DQT_NO_PRINTER -DQT_NO_IPV6 -DQT_DLL -DQT_THREAD_SUPPORT -DQT_NO_DEBUG -DQT_SHARED
LEXFLAGS	=
YACCFLAGS	=-d
INCPATH	=	 -I..\designer -I"$(QTDIR)\include" -IC:\200\trunk\tools\designer\app -Itmp\moc\release_mt_shared -I"$(QMAKESPECDIR)"
INCLUDEPATH = ..\designer;"$(QTDIR)\include";C:\200\trunk\tools\designer\app;tmp\moc\release_mt_shared;"$(QMAKESPECDIR)"
LINK	=	g++
LFLAGS	=	-Zomf -Zstack 0x2000 -Zmap -s -Zlinker /EXEPACK:2 -Zlinker /PM:PM -Zno-fork
LIBS	=	-L"$(QTDIR)\lib" -L"$(QTDIR)\lib\debug" -L"C:\200\trunk/lib" -ldesignercore -lqui -lqassistantclient -lmyqt
MOC		=	$(QTDIR)\bin\moc.exe
UIC		=	$(QTDIR)\bin\uic.exe
QMAKE		=	qmake
IDC		=	$(QTDIR)\bin\idc.exe
IDL		=	
RC		=	rc
ZIP		=	zip -r -9
COPY_FILE	=       copy
COPY_DIR	=       copy
DEL_FILE	=       del
DEL_DIR	=       rmdir
MOVE		=       move
IF_FILE_EXISTS =	if exist
CHK_DIR_EXISTS =	if not exist
MKDIR		=	mkdir

####### Output directory

OBJECTS_DIR = tmp\obj\release_mt_shared
MOC_DIR = tmp\moc\release_mt_shared

####### Files

HEADERS =	
SOURCES =	main.cpp
OBJECTS =	tmp\obj\release_mt_shared\main.obj
FORMS =	
UICDECLS =	
UICIMPLS =	
SRCMOC	=	
OBJMOC	=	
RC_FILE	=	designer_os2.rc
RES_FILE	=	tmp\obj\release_mt_shared\designer_os2.res
DIST	=	
TARGET	=	C:\200\trunk\bin\designer.exe

####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.c.obj:
	$(CC) -c @$(OBJECTS_DIR)\.cflags @$(OBJECTS_DIR)\.incpath -o $@ $<

.cpp.obj:
	$(CXX) -c @$(OBJECTS_DIR)\.cxxflags @$(OBJECTS_DIR)\.incpath -o $@ $<

.cc.obj:
	$(CXX) -c @$(OBJECTS_DIR)\.cxxflags @$(OBJECTS_DIR)\.incpath -o $@ $<

.cxx.obj:
	$(CXX) -c @$(OBJECTS_DIR)\.cxxflags @$(OBJECTS_DIR)\.incpath -o $@ $<

.C.obj:
	$(CXX) -c @$(OBJECTS_DIR)\.cxxflags @$(OBJECTS_DIR)\.incpath -o $@ $<

####### Build rules

all: $(OBJECTS_DIR) $(MOC_DIR) $(TARGET)

$(TARGET): $(OBJECTS_DIR)\.cflags $(OBJECTS_DIR)\.cxxflags $(OBJECTS_DIR)\.incpath $(OBJECTS_DIR)\.objects $(UICDECLS) $(OBJECTS) $(OBJMOC) $(DEF_FILE) C:\200\trunk\lib\designercore.lib $(RES_FILE)
	$(LINK) $(LFLAGS) -o $(TARGET) $(DEF_FILE) @$(OBJECTS_DIR)\.objects $(LIBS)
	$(RC) -n -x2 $(RES_FILE) $(TARGET)

$(RES_FILE): $(RC_FILE)
	set INCLUDE=%INCLUDE%;$(INCLUDEPATH) & $(RC) -n -r $(RC_FILE) $(RES_FILE)

mocables: $(SRCMOC)

$(OBJECTS_DIR):
	@$(CHK_DIR_EXISTS) $(OBJECTS_DIR) $(MKDIR) $(OBJECTS_DIR)

$(MOC_DIR):
	@$(CHK_DIR_EXISTS) $(MOC_DIR) $(MKDIR) $(MOC_DIR)

C:\200\trunk\tools\designer\app\Makefile: app.pro C:\200\trunk\.qmake.cache C:\200\trunk\mkspecs\os2-g++\qmake.conf $(QTDIR)\.qtos2config \
		..\..\..\lib\designercore.prl \
		..\..\..\lib\qui.prl \
		..\..\..\lib\qassistantclient.prl \
		..\..\..\lib\myqt.prl
	$(QMAKE) -o C:\200\trunk\tools\designer\app\Makefile C:\200\trunk\tools\designer\app\app.pro
qmake: 
	@$(QMAKE) -o C:\200\trunk\tools\designer\app\Makefile C:\200\trunk\tools\designer\app\app.pro

dist:
	$(ZIP) designer.zip $(SOURCES) $(HEADERS) $(DIST) $(FORMS) C:\200\trunk\tools\designer\app\app.pro  

clean:
	-$(DEL_FILE) tmp\obj\release_mt_shared\main.obj
	-$(DEL_FILE) $(TARGET)
	-$(DEL_FILE) $(RES_FILE)
	-@$(IF_FILE_EXISTS) "$(OBJECTS_DIR)\.cflags" $(DEL_FILE) "$(OBJECTS_DIR)\.cflags"
	-@$(IF_FILE_EXISTS) "$(OBJECTS_DIR)\.cxxflags" $(DEL_FILE) "$(OBJECTS_DIR)\.cxxflags"
	-@$(IF_FILE_EXISTS) "$(OBJECTS_DIR)\.incpath" $(DEL_FILE) "$(OBJECTS_DIR)\.incpath"
	-@$(IF_FILE_EXISTS) "$(OBJECTS_DIR)\.objects" $(DEL_FILE) "$(OBJECTS_DIR)\.objects"

$(OBJECTS_DIR)\.cflags: export CFLAGS ?= $(CFLAGS)
$(OBJECTS_DIR)\.cflags: $(MAKEFILE_LIST)
	"$(QMAKESPECDIR)\envcat.cmd" CFLAGS > $(OBJECTS_DIR)\.cflags

$(OBJECTS_DIR)\.cxxflags: export CXXFLAGS ?= $(CXXFLAGS)
$(OBJECTS_DIR)\.cxxflags: $(MAKEFILE_LIST)
	"$(QMAKESPECDIR)\envcat.cmd" CXXFLAGS > $(OBJECTS_DIR)\.cxxflags

$(OBJECTS_DIR)\.incpath: export INCPATH ?= $(INCPATH)
$(OBJECTS_DIR)\.incpath: $(MAKEFILE_LIST)
	"$(QMAKESPECDIR)\envcat.cmd" INCPATH > $(OBJECTS_DIR)\.incpath

$(OBJECTS_DIR)\.objects: export OBJECT_FILES = $(OBJECTS) $(OBJMOC)
$(OBJECTS_DIR)\.objects: $(MAKEFILE_LIST)
	"$(QMAKESPECDIR)\envcat.cmd" OBJECT_FILES > $(OBJECTS_DIR)\.objects


####### Compile

tmp\obj\release_mt_shared\main.obj: main.cpp 
	$(CXX) -c @$(OBJECTS_DIR)\.cxxflags @$(OBJECTS_DIR)\.incpath -o tmp\obj\release_mt_shared\main.obj main.cpp

####### Install

install:  

uninstall:  

